
@incollection{weller_brief_2013,
	location = {Heidelberg},
	title = {A Brief Overview of Collision Detection},
	isbn = {978-3-319-01020-5},
	url = {https://doi.org/10.1007/978-3-319-01020-5_2},
	abstract = {Collision detection algorithms has been investigated since decades. Consequently, there already exist a wide spectrum of different approaches. In this chapter, we give a broad overview of classical and recent developments in this field. Moreover, we introduce the typical terminology for collision detection problems and we develop a classification of collision detection algorithms by outlining different parameters.},
	pages = {9--46},
	booktitle = {New Geometric Data Structures for Collision Detection and Haptics},
	publisher = {Springer International Publishing},
	author = {Weller, René},
	editor = {Weller, René},
	urldate = {2025-01-27},
	date = {2013},
	langid = {english},
	doi = {10.1007/978-3-319-01020-5_2},
}

@book{weller_new_2013,
	location = {Heidelberg},
	title = {New Geometric Data Structures for Collision Detection and Haptics},
	rights = {https://www.springernature.com/gp/researchers/text-and-data-mining},
	isbn = {978-3-319-01019-9 978-3-319-01020-5},
	url = {https://link.springer.com/10.1007/978-3-319-01020-5},
	series = {Springer Series on Touch and Haptic Systems},
	publisher = {Springer International Publishing},
	author = {Weller, René},
	urldate = {2025-01-27},
	date = {2013},
	langid = {english},
	doi = {10.1007/978-3-319-01020-5},
	keywords = {Collision Detection, Geometric Data Structures, Haptics, Physically-based Simulation, Sphere Packings},
	file = {PDF:/home/telvivace/Zotero/storage/7QA959BL/Weller - 2013 - New Geometric Data Structures for Collision Detection and Haptics.pdf:application/pdf},
}

@incollection{weller_kinetic_2013,
	location = {Heidelberg},
	title = {Kinetic Data Structures for Collision Detection},
	isbn = {978-3-319-01020-5},
	url = {https://doi.org/10.1007/978-3-319-01020-5_3},
	abstract = {Deformable objects cause special problems to collision detection algorithms; first, pre-computed data structures like bounding volume hierarchies that are widely used for rigid objects become invalid if the geometry changes. Second, it is possible that parts of one object intersect other parts of the same object, the so-called self-collisions. In this chapter, we present several new algorithms that detect collisions between deformable objects more efficiently than previous approaches. For instance, we prove that our new kinetic {AABB}-Tree is optimal in the number of updates that is required to restore a bounding volume hierarchy after deformations. Moreover, our kinetic Separation-List can perform both, continuous collision and self-collision queries at interactive rates. Our new methods gain their efficiency from an event-based approach that relies on the framework of kinetic data structures.},
	pages = {49--89},
	booktitle = {New Geometric Data Structures for Collision Detection and Haptics},
	publisher = {Springer International Publishing},
	author = {Weller, René},
	editor = {Weller, René},
	urldate = {2025-01-27},
	date = {2013},
	langid = {english},
	doi = {10.1007/978-3-319-01020-5_3},
}

@incollection{weller_evaluation_2013,
	location = {Heidelberg},
	title = {Evaluation and Analysis of Collision Detection Algorithms},
	isbn = {978-3-319-01020-5},
	url = {https://doi.org/10.1007/978-3-319-01020-5_6},
	abstract = {A fair comparison of different collision detection approaches is highly non-trivial. Simply stressing the algorithms with worst case scenarios does not reveal their behaviour in real-world applications. For instance, all polygon-based collision detection algorithms show a quadratic running-time for some artificial objects. In this chapter we provide a theoretical average-case analysis for algorithms that are based on axis-aligned bounding boxes. This enables us to prove an almost logarithmic performance for most real-world objects. Moreover, we have developed the first standardized benchmarking suite that includes a broad spectrum of different and interesting contact scenarios. It is able to evaluate both, the performance of different collision detection implementations as well as the quality of the collision response methods.},
	pages = {147--192},
	booktitle = {New Geometric Data Structures for Collision Detection and Haptics},
	publisher = {Springer International Publishing},
	author = {Weller, René},
	editor = {Weller, René},
	urldate = {2025-01-27},
	date = {2013},
	langid = {english},
	doi = {10.1007/978-3-319-01020-5_6},
}

@incollection{weller_sphere_2013,
	location = {Heidelberg},
	title = {Sphere Packings for Arbitrary Objects},
	isbn = {978-3-319-01020-5},
	url = {https://doi.org/10.1007/978-3-319-01020-5_4},
	abstract = {In this chapter, we present a new algorithm that is able to compute space-filling polydisperse sphere-packings for arbitrary objects. Originally, we developed our algorithms as a means to an end in order to realize our Inner Sphere Trees data structure that is described in the next chapter. Surprisingly, it turns out that the efficient computation of sphere packings for arbitrary objects, but also the algorithm itself, open interesting new ways to solve fundamental problems of computer graphics and beyond. Some ideas for future use are outlined at the end of this chapter.},
	pages = {91--112},
	booktitle = {New Geometric Data Structures for Collision Detection and Haptics},
	publisher = {Springer International Publishing},
	author = {Weller, René},
	editor = {Weller, René},
	urldate = {2025-01-27},
	date = {2013},
	langid = {english},
	doi = {10.1007/978-3-319-01020-5_4},
}

@article{klein_point_2004,
	title = {Point Cloud Collision Detection},
	volume = {23},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2004.00788.x},
	doi = {10.1111/j.1467-8659.2004.00788.x},
	abstract = {In the past few years, many efficient rendering and surface reconstruction algorithms for point clouds have been developed. However, collision detection of point clouds has not been considered until now, although this is a prerequisite to use them for interactive or animated 3D graphics. We present a novel approach for time-critical collision detection of point clouds. Based solely on the point representation, it can detect intersections of the underlying implicit surfaces. The surfaces do not need to be closed. We construct a point hierarchy where each node stores a sufficient sample of the points plus a sphere covering of a part of the surface. These are used to derive criteria that guide our hierarchy traversal so as to increase convergence. One of them can be used to prune pairs of nodes, the other one is used to prioritize still to be visited pairs of nodes. At the leaves we efficiently determine an intersection by estimating the smallest distance. We have tested our implementation for several large point cloud models. The results show that a very fast and precise answer to collision detection queries can always be given. Categories and Subject Descriptors (according to {ACM} {CCS}): G.1.2 [Numerical Analysis]: Approximation of surfaces and contours I.3.5 [Computer Graphics]: Computational Geometry and Object-Modeling[Geometric algorithms, languages and systems; object hierarchy; physically-based modeling] I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism[Animation; virtual reality]},
	pages = {567--576},
	number = {3},
	journaltitle = {Computer Graphics Forum},
	author = {Klein, Jan and Zachmann, Gabriel},
	urldate = {2025-01-27},
	date = {2004},
	langid = {english},
	note = {Number: 3
\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8659.2004.00788.x},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/AB44T3SF/Klein and Zachmann - 2004 - Point Cloud Collision Detection.pdf:application/pdf;Snapshot:/home/telvivace/Zotero/storage/Q8MG5N5B/j.1467-8659.2004.00788.html:text/html},
}

@article{gres_gpu-based_2006,
	title = {{GPU}-based Collision Detection for Deformable Parameterized Surfaces},
	volume = {25},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2006.00969.x},
	doi = {10.1111/j.1467-8659.2006.00969.x},
	abstract = {Based on the potential of current programmable {GPUs}, recently several approaches were developed that use the {GPU} to calculate deformations of surfaces like the folding of cloth or to convert higher level geometry to renderable primitives like {NURBS} or subdivision surfaces. These algorithms are realized as a per-frame operation and take advantage of the parallel processing power of the {GPU}. Unfortunately, an efficient accurate collision detection, that is necessary for the simulation itself or for the interaction with and editing of the objects, can currently not be integrated seamlessly into these {GPU}-based approaches without switching back to the {CPU}. In this paper we describe a novel {GPU}-based collision detection method for deformable parameterized surfaces that can easily be combined with the aforementioned approaches. Representing the individual parameterized surfaces by stenciled geometry images allows to generate {GPU}-optimized bounding volume hierarchies in real-time that serve as a basis for an optimized {GPU}-based hierarchical collision detection algorithm. As a test case we applied our algorithm to the collision detection of deformable trimmed {NURBS} models, which is an important problem in industry. For the trimming and tessellation of the {NURBS} on the {GPU} we used a recent approach [{GBK}05] and combined it with our collision detection algorithm. This way we are able to render and check collisions for deformable models consisting of several thousands of trimmed {NURBS} patches in real-time. Categories and Subject Descriptors (according to {ACM} {CCS}): I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling—Geometric algorithms, languages, and systems; Splines; I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism—Virtual reality},
	pages = {497--506},
	number = {3},
	journaltitle = {Computer Graphics Forum},
	author = {Greß, Alexander and Guthe, Michael and Klein, Reinhard},
	urldate = {2025-01-27},
	date = {2006},
	langid = {english},
	note = {Number: 3
\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8659.2006.00969.x},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/DMT7MWDR/Greß et al. - 2006 - GPU-based Collision Detection for Deformable Parameterized Surfaces.pdf:application/pdf;Snapshot:/home/telvivace/Zotero/storage/NCQRR9LK/j.1467-8659.2006.00969.html:text/html},
}

@article{lauterbach_gproximity_2010,
	title = {{gProximity}: Hierarchical {GPU}-based Operations for Collision and Distance Queries},
	volume = {29},
	rights = {© 2010 The Author(s) Journal compilation © 2010 The Eurographics Association and Blackwell Publishing Ltd.},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2009.01611.x},
	doi = {10.1111/j.1467-8659.2009.01611.x},
	shorttitle = {{gProximity}},
	abstract = {We present novel parallel algorithms for collision detection and separation distance computation for rigid and deformable models that exploit the computational capabilities of many-core {GPUs}. Our approach uses thread and data parallelism to perform fast hierarchy construction, updating, and traversal using tight-fitting bounding volumes such as oriented bounding boxes ({OBB}) and rectangular swept spheres ({RSS}). We also describe efficient algorithms to compute a linear bounding volume hierarchy ({LBVH}) and update them using refitting methods. Moreover, we show that tight-fitting bounding volume hierarchies offer improved performance on {GPU}-like throughput architectures. We use our algorithms to perform discrete and continuous collision detection including self-collisions, as well as separation distance computation between non-overlapping models. In practice, our approach ({gProximity}) can perform these queries in a few milliseconds on a {PC} with {NVIDIA} {GTX} 285 card on models composed of tens or hundreds of thousands of triangles used in cloth simulation, surgical simulation, virtual prototyping and N-body simulation. Moreover, we observe more than an order of magnitude performance improvement over prior {GPU}-based algorithms.},
	pages = {419--428},
	number = {2},
	journaltitle = {Computer Graphics Forum},
	author = {Lauterbach, C. and Mo, Q. and Manocha, D.},
	urldate = {2025-01-27},
	date = {2010},
	langid = {english},
	note = {Number: 2
\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8659.2009.01611.x},
	keywords = {and systems, I.3.5 Computer Graphics: Computational Geometry and Object Modeling—Geometric Algorithms, I.3.5 Computer Graphics: Computational Geometry and Object Modeling—Object hierarchies, languages},
	file = {Snapshot:/home/telvivace/Zotero/storage/J9ZVRSJS/j.1467-8659.2009.01611.html:text/html},
}

@article{morvan_high_2008,
	title = {High Performance {GPU}-based Proximity Queries using Distance Fields},
	volume = {27},
	rights = {© 2008 The Authors Journal compilation © 2008 The Eurographics Association and Blackwell Publishing Ltd.},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2008.01183.x},
	doi = {10.1111/j.1467-8659.2008.01183.x},
	abstract = {Proximity queries such as closest point computation and collision detection have many applications in computer graphics, including computer animation, physics-based modelling, augmented and virtual reality. We present efficient algorithms for proximity queries between a closed rigid object and an arbitrary, possibly deformable, polygonal mesh. Using graphics hardware to densely sample the distance field of the rigid object over the arbitrary mesh, we compute minimal proximity and collision response information on the graphics processing unit ({GPU}) using blending and depth buffering, as well as parallel reduction techniques, thus minimizing the readback bottleneck. Although limited to image-space resolution, our algorithm provides high and steady performance when compared with other similar algorithms. Proximity queries between arbitrary meshes with hundreds of thousands of triangles and detailed distance fields of rigid objects are computed in a few milliseconds at high-sampling resolution, even in situations with large overlap.},
	pages = {2040--2052},
	number = {8},
	journaltitle = {Computer Graphics Forum},
	author = {Morvan, T. and Reimers, M. and Samset, E.},
	urldate = {2025-01-27},
	date = {2008},
	langid = {english},
	note = {Number: 8
\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8659.2008.01183.x},
	keywords = {collision detection, distance fields, {GPU}, I.3.5 Computer Graphics: Geometric Algorithms, I.3.7 Computer Graphics: Animation, proximity queries, virtual reality},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/LU7JEDU8/Morvan et al. - 2008 - High Performance GPU-based Proximity Queries using Distance Fields.pdf:application/pdf;Snapshot:/home/telvivace/Zotero/storage/DXUYGDD3/j.1467-8659.2008.01183.html:text/html},
}

@article{maciel_efficient_2008,
	title = {An efficient dynamic point algorithm for line-based collision detection in real time virtual environments involving haptics},
	volume = {19},
	rights = {Copyright © 2008 John Wiley \& Sons, Ltd.},
	issn = {1546-427X},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cav.224},
	doi = {10.1002/cav.224},
	abstract = {In real time computer graphics, “interactivity” is limited to a display rate of 30 frames per second. However, in multimodal virtual environments involving haptic interactions, a much higher update rate of about 1 {kHz} is necessary to ensure continuous interactions and smooth transitions. The simplest and most efficient interaction paradigm in such environments is to represent the haptic cursor as a point. However, in many situations, such as those in the development of real time medical simulations involving the interactions of long slender surgical tools with soft deformable organs, such a paradigm is nonrealistic and at least a line-based interaction is desirable. While such paradigms exist, the main impediment to their widespread use is the associated computational complexity. In this paper, we introduce, for the first time, an efficient algorithm for computing the interaction of a line-shaped haptic cursor and polygonal surface models which has a near constant complexity. The algorithm relies on space-time coherence, topological information, and the properties of lines in 3D space to maintain proximity information between a line segment and triangle meshes. For interaction with convex objects, the line is represented by its end points and a dynamic point, which is the closest point on the line to any potentially colliding triangle. To deal with multiple contacts and non-convexities, the line is decomposed into segments and a dynamic point is used for each segment. The algorithm may be used to compute collision detection and response with rigid as well as deformable objects with no performance penalty. Realistic examples are presented to demonstrate the effectiveness of our approach. Copyright © 2008 John Wiley \& Sons, Ltd.},
	pages = {151--163},
	number = {2},
	journaltitle = {Computer Animation and Virtual Worlds},
	author = {Maciel, Anderson and De, Suvranu},
	urldate = {2025-01-27},
	date = {2008},
	langid = {english},
	note = {Number: 2
\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/cav.224},
	keywords = {computer graphics, haptic I/O, interaction techniques, simulation and modeling},
	file = {Snapshot:/home/telvivace/Zotero/storage/QI2WBF6V/cav.html:text/html},
}

@book{ericson_real-time_2005,
	title = {Real-Time Collision Detection (The Morgan Kaufmann Series in Interactive 3-D Technology)},
	isbn = {978-1-55860-732-3},
	url = {http://gen.lib.rus.ec/book/index.php?md5=b46cb7dad118b121c7ee19a3923c9143},
	series = {The Morgan Kaufmann Series in Interactive 3-D Technology},
	publisher = {Morgan Kaufmann},
	author = {Ericson, Christer},
	urldate = {2025-01-27},
	date = {2005},
	file = {PDF:/home/telvivace/Zotero/storage/VVC8VVHD/Ericson - 2005 - Real-Time Collision Detection (The Morgan Kaufmann Series in Interactive 3-D Technology).pdf:application/pdf},
}

@book{schwarzl_2d_2012,
	title = {2D game collision detection: an introduction to clashing geometry in games},
	url = {http://gen.lib.rus.ec/book/index.php?md5=351B5F54A0445C709A496B6DE6247AF2},
	shorttitle = {2D game collision detection},
	publisher = {Thomas Schwarzl},
	author = {Schwarzl, Thomas},
	urldate = {2025-01-27},
	date = {2012},
	file = {Ebook:/home/telvivace/Zotero/storage/LMWVJ65V/Schwarzl - 2012 - 2D game collision detection an introduction to clashing geometry in games.epub:application/epub+zip},
}

@article{wang_efficient_2018,
	title = {Efficient {BVH}-based Collision Detection Scheme with Ordering and Restructuring},
	volume = {37},
	rights = {© 2018 The Author(s) Computer Graphics Forum © 2018 The Eurographics Association and John Wiley \& Sons Ltd. Published by John Wiley \& Sons Ltd.},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13356},
	doi = {10.1111/cgf.13356},
	abstract = {Bounding volume hierarchy ({BVH}) has been widely adopted as the acceleration structure in broad-phase collision detection. Previous state-of-the-art {BVH}-based collision detection approaches exploited the spatio-temporal coherence of simulations by maintaining a bounding volume test tree ({BVTT}) front. A major drawback of these algorithms is that large deformations in the scenes decrease culling efficiency and slow down collision queries. Moreover, for front-based methods, the inefficient caching on {GPU} caused by the arbitrary layout of {BVH} and {BVTT} front nodes becomes a critical performance issue. We present a fast and robust {BVH}-based collision detection scheme on {GPU} that addresses the above problems by ordering and restructuring {BVHs} and {BVTT} fronts. Our techniques are based on the use of histogram sort and an auxiliary structure {BVTT} front log, through which we analyze the dynamic status of {BVTT} front and {BVH} quality. Our approach efficiently handles inter- and intra-object collisions and performs especially well in simulations where there is considerable spatio-temporal coherence. The benchmark results demonstrate that our approach is significantly faster than the previous {BVH}-based method, and also outperforms other state-of-the-art spatial subdivision schemes in terms of speed.},
	pages = {227--237},
	number = {2},
	journaltitle = {Computer Graphics Forum},
	author = {Wang, Xinlei and Tang, Min and Manocha, Dinesh and Tong, Ruofeng},
	urldate = {2025-01-27},
	date = {2018},
	langid = {english},
	note = {Number: 2
\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/cgf.13356},
	keywords = {•Computing methodologies → Collision detection, bvh, {CCS} Concepts, Physical simulation},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/NTXD6J4W/Wang et al. - 2018 - Efficient BVH-based Collision Detection Scheme with Ordering and Restructuring.pdf:application/pdf;Snapshot:/home/telvivace/Zotero/storage/R4JX4A2L/cgf.html:text/html},
}

@article{li_efficient_2023,
	title = {Efficient collision detection using hybrid medial axis transform and {BVH} for rigid body simulation},
	volume = {128},
	issn = {1524-0703},
	url = {https://www.sciencedirect.com/science/article/pii/S1524070323000103},
	doi = {10.1016/j.gmod.2023.101180},
	abstract = {Medial Axis Transform ({MAT}) has been recently adopted as the acceleration structure of broad-phase collision detection. Compared to traditional {BVH}-based methods, {MAT} can provide a high-fidelity volumetric approximation of 3D complex objects, resulting in higher collision culling efficiency. However, due to {MAT}’s non-hierarchical structure, it may be outperformed in collision-light scenarios because several cullings at the top level of a {BVH} may take a large number of cullings with {MAT}. We propose a collision detection method that combines {MAT} and {BVH} to address the above problem. Our technique efficiently culls collisions between dynamic and static objects. Experimental results show that our method has higher culling efficiency than pure {BVH} or {MAT} methods.},
	pages = {101180},
	journaltitle = {Graphical Models},
	shortjournal = {Graphical Models},
	author = {Li, Xingxin and Song, Shibo and Yao, Junfeng and Zhang, Hanyin and Zhou, Rongzhou and Hong, Qingqi},
	urldate = {2025-01-27},
	date = {2023-07-01},
	keywords = {Physical simulation, Collision detection},
	file = {PDF:/home/telvivace/Zotero/storage/9KCC5KE6/Li et al. - 2023 - Efficient collision detection using hybrid medial axis transform and BVH for rigid body simulation.pdf:application/pdf;ScienceDirect Snapshot:/home/telvivace/Zotero/storage/FTMEP8A7/S1524070323000103.html:text/html},
}

@article{meister_survey_2021,
	title = {A Survey on Bounding Volume Hierarchies for Ray Tracing},
	volume = {40},
	rights = {© 2021 The Author(s) Computer Graphics Forum © 2021 The Eurographics Association and John Wiley \& Sons Ltd. Published by John Wiley \& Sons Ltd.},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.142662},
	doi = {10.1111/cgf.142662},
	abstract = {Ray tracing is an inherent part of photorealistic image synthesis algorithms. The problem of ray tracing is to find the nearest intersection with a given ray and scene. Although this geometric operation is relatively simple, in practice, we have to evaluate billions of such operations as the scene consists of millions of primitives, and the image synthesis algorithms require a high number of samples to provide a plausible result. Thus, scene primitives are commonly arranged in spatial data structures to accelerate the search. In the last two decades, the bounding volume hierarchy ({BVH}) has become the de facto standard acceleration data structure for ray tracing-based rendering algorithms in offline and recently also in real-time applications. In this report, we review the basic principles of bounding volume hierarchies as well as advanced state of the art methods with a focus on the construction and traversal. Furthermore, we discuss industrial frameworks, specialized hardware architectures, other applications of bounding volume hierarchies, best practices, and related open problems.},
	pages = {683--712},
	number = {2},
	journaltitle = {Computer Graphics Forum},
	author = {Meister, Daniel and Ogaki, Shinji and Benthin, Carsten and Doyle, Michael J. and Guthe, Michael and Bittner, Jiří},
	urldate = {2025-01-27},
	date = {2021},
	langid = {english},
	note = {Number: 2
\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/cgf.142662},
	keywords = {bvh, {CCS} Concepts, • Computing methodologies → Ray tracing, • Theory of computation → Computational geometry, Massively parallel algorithms, ray tracing, Sorting and searching, Visibility},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/FNIIA67A/Meister et al. - 2021 - A Survey on Bounding Volume Hierarchies for Ray Tracing.pdf:application/pdf;Snapshot:/home/telvivace/Zotero/storage/Z2ET47D6/cgf.html:text/html},
}

@inproceedings{chitalu_bulk-synchronous_2018,
	location = {New York, {NY}, {USA}},
	title = {Bulk-synchronous parallel simultaneous {BVH} traversal for collision detection on {GPUs}},
	isbn = {978-1-4503-5705-0},
	url = {https://doi.org/10.1145/3190834.3190848},
	doi = {10.1145/3190834.3190848},
	series = {I3D '18},
	abstract = {Simultaneous {BVH} traversal, as a dynamic task of pair-wise proximity tests, poses several challenges in terms of parallelization using {GPUs}. It is a highly dynamic and data-dependent problem which can induce control-flow divergence and inefficient data-access patterns. We present a simple solution using the bulk-synchronous parallel model to ensure a uniform mode of execution, and balanced workloads across {GPU} threads. The method is easy to implement, fast and operates entirely on the {GPU} by relying on a topology-centred work expansion scheme to ensure large concurrent workloads. We demonstrate speedups of upto 7.1x over the widely used "streams" model for {GPU} based parallel collision detection.},
	pages = {1--9},
	booktitle = {Proceedings of the {ACM} {SIGGRAPH} Symposium on Interactive 3D Graphics and Games},
	publisher = {Association for Computing Machinery},
	author = {Chitalu, Floyd M. and Dubach, Christophe and Komura, Taku},
	urldate = {2025-01-27},
	date = {2018-05-15},
	keywords = {{GPU}, {BVH}},
	file = {Accepted Version:/home/telvivace/Zotero/storage/Z52LBFMP/Chitalu et al. - 2018 - Bulk-synchronous parallel simultaneous BVH traversal for collision detection on GPUs.pdf:application/pdf},
}

@article{mei_collision_2022,
	title = {A Collision Detection and Cloth Simulation Method Based on Parallel {BVH}},
	rights = {Copyright (c)},
	issn = {1520-0191},
	url = {http://www.forestchemicalsreview.com/index.php/JFCR/article/view/745},
	abstract = {To solve the challenges such as low simulation performance, poor simulation effect, and manual definition of a collider in the real-time collision in cloth simulation, a collision detection method based on parallel hierarchical bounding volume hierarchies ({BVH}) is proposed. Firstly, the advantages and feasibility of using hierarchical bounding box for collision detection in cloth simulation are analyzed theoretically; Then {AABB} bounding box and the sphere bounding box is selected, and a group of {BVH} structure bounding boxes is constructed in parallel by using the hierarchical bounding box generation method based on Morton code; Finally, the computational shader is used to execute in parallel so that multiple particles update their positions at the same time and traverse the {BVH} structure of the model. The experimental results shown in Unity show that this method reduces the tedious work of manually defining the bounding box, speeds up the collision detection rate, accurately depicts the state when the cloth collides with the object and is suitable for real-time interactive applications.},
	pages = {631--647},
	journaltitle = {Forest Chemicals Review},
	author = {Mei, Huawei and Fan, Chenyao and Zhang, Ronghua and Liu, Yonggang},
	urldate = {2025-01-27},
	date = {2022},
	langid = {english},
	keywords = {{BVH}, cloth, parallel},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/2AFPLK8S/Mei et al. - 2022 - A Collision Detection and Cloth Simulation Method Based on Parallel BVH.pdf:application/pdf},
}

@article{damkjaer_stackless_2007,
	title = {Stackless {BVH} collision detection for physical simulation},
	url = {http://image.diku.dk/projects/media/jesper.damkjaer.07.pdf},
	author = {Damkjær, Jesper},
	urldate = {2025-01-27},
	date = {2007},
	keywords = {{BVH}},
	file = {Available Version (via Google Scholar):/home/telvivace/Zotero/storage/7DVWLW7H/Damkjær - 2007 - Stackless BVH collision detection for physical simulation.pdf:application/pdf},
}

@inproceedings{zhao_parallel_2008,
	title = {Parallel collision detection algorithm based on mixed {BVH} and {OpenMP}},
	url = {https://ieeexplore.ieee.org/abstract/document/4675468},
	doi = {10.1109/ASC-ICSC.2008.4675468},
	abstract = {Concerning the requirements of real-time and accurate collision detection in interactive system, we propose a shared memory parallel collision detection algorithm. First we incorporate the merits of both {AABB} bounding box and bounding spheres to construct a hybrid bounding representation of arbitrary non-convex polyhedra (S-{AABB}) for attaining speed, and then use {OpenMP} parallel programming model to traversal the built hybrid bounding volume hierarchy, so further accelerate the collision detection algorithm. At last, experiments results have shown that our algorithm is advantageous over other current typical collision detection algorithms such as I-{COLLIDE} [1] regarding efficiency and accuracy, so can meet the real-time and accurate requirements in complex interactive virtual environment.},
	eventtitle = {2008 Asia Simulation Conference - 7th International Conference on System Simulation and Scientific Computing},
	pages = {786--792},
	booktitle = {2008 Asia Simulation Conference - 7th International Conference on System Simulation and Scientific Computing},
	author = {Zhao, Wei and Tan, Rui-pu and Li, Wen-hui},
	urldate = {2025-01-27},
	date = {2008-10},
	keywords = {{BVH}, parallel, Computational geometry, Computer science, Concurrent computing, Detection algorithms, Object detection, {OpenMP}, Robot control, Space technology, Testing, Virtual environment, Virtual reality},
	file = {IEEE Xplore Abstract Record:/home/telvivace/Zotero/storage/Y596M8W7/4675468.html:text/html},
}

@inproceedings{liu_volumetric_2007,
	title = {A Volumetric Bounding Volume Hierarchy for Collision Detection},
	url = {https://ieeexplore.ieee.org/abstract/document/4407936},
	doi = {10.1109/CADCG.2007.4407936},
	abstract = {Existing {BVHs} are restricted to surface-based hierarchical decomposition, which lose the inner space properties of object and provide little guidance for the collision avoidance. We present a novel, volume-based {BvH} - inner space bounding volume hierarchy ({ISBVH}). Compared with the surface-based {BVH}, {ISBVH} can enclose the boundary surface and inner space simultaneously in any order. Due to approximating the object in volume manner, more significant penetration features such as potential penetration regions, penetration points and penetration depth can be identified in the phase of collision detection without any additional computation cost. These features are extremely necessary for guiding quick and reasonable collision avoidance.},
	eventtitle = {2007 10th {IEEE} International Conference on Computer-Aided Design and Computer Graphics},
	pages = {485--488},
	booktitle = {2007 10th {IEEE} International Conference on Computer-Aided Design and Computer Graphics},
	author = {Liu, Li and Wang, Zhao-qi and Xia, Shi-hong},
	urldate = {2025-01-27},
	date = {2007-10},
	keywords = {Object detection, Space technology, Collision avoidance, Computational efficiency, Computers, Data structures, Information processing, Laboratories, Motion detection, Phase detection},
	file = {IEEE Xplore Abstract Record:/home/telvivace/Zotero/storage/CYJND23G/4407936.html:text/html},
}

@inproceedings{liu_volumetric_2007-1,
	title = {A Volumetric Bounding Volume Hierarchy for Collision Detection},
	url = {https://ieeexplore.ieee.org/abstract/document/4407936},
	doi = {10.1109/CADCG.2007.4407936},
	abstract = {Existing {BVHs} are restricted to surface-based hierarchical decomposition, which lose the inner space properties of object and provide little guidance for the collision avoidance. We present a novel, volume-based {BvH} - inner space bounding volume hierarchy ({ISBVH}). Compared with the surface-based {BVH}, {ISBVH} can enclose the boundary surface and inner space simultaneously in any order. Due to approximating the object in volume manner, more significant penetration features such as potential penetration regions, penetration points and penetration depth can be identified in the phase of collision detection without any additional computation cost. These features are extremely necessary for guiding quick and reasonable collision avoidance.},
	eventtitle = {2007 10th {IEEE} International Conference on Computer-Aided Design and Computer Graphics},
	pages = {485--488},
	booktitle = {2007 10th {IEEE} International Conference on Computer-Aided Design and Computer Graphics},
	author = {Liu, Li and Wang, Zhao-qi and Xia, Shi-hong},
	urldate = {2025-01-27},
	date = {2007-10},
	keywords = {{BVH}, Object detection, Space technology, Collision avoidance, Computational efficiency, Computers, Data structures, Information processing, Laboratories, Motion detection, Phase detection},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/47REZSLN/Liu et al. - 2007 - A Volumetric Bounding Volume Hierarchy for Collision Detection.pdf:application/pdf;IEEE Xplore Abstract Record:/home/telvivace/Zotero/storage/VELBNAHZ/4407936.html:text/html},
}

@article{naylor_merging_1990,
	title = {Merging {BSP} Trees Yields Polyhedral Set Operations},
	volume = {24},
	url = {https://www.cs.utexas.edu/users/fussell/courses/cs384g-fall2010/old/bsp_treemerge.pdf},
	number = {4},
	journaltitle = {Computer Graphics},
	author = {Naylor, Bruce and Amanatidest, John and Thibault, William},
	urldate = {2025-01-27},
	date = {1990},
	note = {Number: 4},
	keywords = {{BSP}},
	file = {Available Version (via Google Scholar):/home/telvivace/Zotero/storage/VF63HN2B/Naylor et al. - 1990 - Merging BSP Trees Yields Polyhedral Set Operations.pdf:application/pdf},
}

@incollection{chin_iii5_1995,
	location = {Boston},
	title = {{III}.5 - A Walk through {BSP} Trees},
	isbn = {978-0-12-543457-7},
	url = {https://www.sciencedirect.com/science/article/pii/B9780125434577500267},
	abstract = {This chapter discusses traversal through binary space-partitioning ({BSP}) trees. {BSP} trees are data structures that allow for fast visible-surface determination in environments where the viewer moves while the polygonal objects remain static, as in interactive walkthroughs. One solution to the visible-surface problem is to render a scene's polygons in back-to-front order so that polygons nearer to the viewer overwrite those farther away. However, this simple painter's algorithm offers no consistent means of identifying polygon depth; choosing either the extreme vertices or the centroid as the sorting key fails in certain cases. This algorithm also fails in cases of cyclic overlaps and interpenetrating polygons. The depth sort algorithm solves all of these problems, but in a view-dependent way. This chapter describes the construction of {BSP} trees and their traversal, which generates polygons in a sorted order suitable for rendering. It also presents an efficient viewer/object collision detection algorithm based upon this versatile data structure.},
	pages = {121--138},
	booktitle = {Graphics Gems V},
	publisher = {Academic Press},
	author = {Chin, Norman},
	editor = {Paeth, Alan W.},
	urldate = {2025-01-27},
	date = {1995-01-01},
	doi = {10.1016/B978-0-12-543457-7.50026-7},
	keywords = {{BSP}},
	file = {ScienceDirect Snapshot:/home/telvivace/Zotero/storage/MM6EUF7Y/B9780125434577500267.html:text/html},
}

@article{havran_fast_2025,
	title = {{FAST} {ROBUST} {BSP} {TREE} {TRAVERSAL} {ALGORITHM} {FOR} {RAY} {TRACING}},
	url = {https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=877db116e624eb917519ae430a6ff08f1604cf48},
	author = {Havran, Vlastimil and as Kopal, Tom and r Bittner, Ji},
	urldate = {2025-01-27},
	date = {2025-01-27},
	note = {Publisher: Citeseer},
	keywords = {{BSP}, ray trasing, tree traversal},
	file = {Available Version (via Google Scholar):/home/telvivace/Zotero/storage/SUAVZU68/Havran et al. - FAST ROBUST BSP TREE TRAVERSAL ALGORITHM FOR RAY TRACING.pdf:application/pdf},
}

@article{samet_quadtree_1984,
	title = {The Quadtree and Related Hierarchical Data Structures},
	volume = {16},
	issn = {0360-0300},
	url = {https://dl.acm.org/doi/10.1145/356924.356930},
	doi = {10.1145/356924.356930},
	pages = {187--260},
	number = {2},
	journaltitle = {{ACM} Comput. Surv.},
	author = {Samet, Hanan},
	urldate = {2025-01-27},
	date = {1984-06-01},
	note = {Number: 2},
	keywords = {quadtree},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/RJZ55FSX/Samet - 1984 - The Quadtree and Related Hierarchical Data Structures.pdf:application/pdf},
}

@article{shaffer_optimal_1987,
	title = {Optimal quadtree construction algorithms},
	volume = {37},
	issn = {0734-189X},
	url = {https://www.sciencedirect.com/science/article/pii/0734189X87900454},
	doi = {10.1016/0734-189X(87)90045-4},
	abstract = {An algorithm is presented that builds a quadtree in time proportional to the number of blocks in the image. In particular, this algorithm constructs a linear quadtree from a raster image stored on disk in time proportional to the number of nodes in the output quadtree plus the (relatively minor) amount of time to read the input data. Empirical tests show that for typical 512 × 512 pixel images, the new algorithm results in an order of magnitude or better improvement over traditional algorithms which insert each pixel separately and require a merge routine to form larger nodes. These traditional algorithms have an execution time that is proportional to the number of pixels in the image. Thus, when using the number of insertions into the output quadtree as a metric, our algorithm is optimal to within a constant factor. The algorithm is also adapted to build a pointer-based quadtree, again without a need to merge any nodes.},
	pages = {402--419},
	number = {3},
	journaltitle = {Computer Vision, Graphics, and Image Processing},
	shortjournal = {Computer Vision, Graphics, and Image Processing},
	author = {Shaffer, Clifford A and Samet, Hanan},
	urldate = {2025-01-27},
	date = {1987-03-01},
	note = {Number: 3},
	keywords = {quadtree},
	file = {ScienceDirect Snapshot:/home/telvivace/Zotero/storage/4RLWB95A/0734189X87900454.html:text/html},
}

@book{kothuri_quadtree_2002,
	title = {Quadtree and R-tree Indexes in Oracle Spatial: A Comparison using {GIS} Data},
	url = {http://gen.lib.rus.ec/book/index.php?md5=3adb72c9de79a48f5aa8745ea39a36f8},
	shorttitle = {Quadtree and R-tree Indexes in Oracle Spatial},
	abstract = {{PDF} {\textbar} Spatial indexing has been one of the active focus areas in recent database research. Several variants of Quadtree and R-tree indexes have been... {\textbar} Find, read and cite all the research you need on {ResearchGate}},
	author = {Kothuri, Kanth V. and Ravada, Siva and Abugov, Daniel},
	urldate = {2025-01-27},
	date = {2002},
	keywords = {quadtree, r-tree},
	file = {PDF:/home/telvivace/Zotero/storage/T29TTWA4/Kothuri et al. - 2002 - Quadtree and R-tree Indexes in Oracle Spatial A Comparison using GIS Data.pdf:application/pdf},
}

@inproceedings{kuturi_quadtree_2025,
	title = {Quadtree and R-tree indexes in Oracle Spatial: A comparison using {GIS} data},
	url = {https://www.researchgate.net/publication/221213231_Quadtree_and_R-tree_indexes_in_Oracle_Spatial_A_comparison_using_GIS_data},
	shorttitle = {({PDF}) Quadtree and R-tree indexes in Oracle Spatial},
	abstract = {{PDF} {\textbar} Spatial indexing has been one of the active focus areas in recent database research. Several variants of Quadtree and R-tree indexes have been... {\textbar} Find, read and cite all the research you need on {ResearchGate}},
	booktitle = {{ResearchGate}},
	author = {Kuturi, Ravi Kanth V and Ravada,, Siva and Abugov, Daniel},
	urldate = {2025-01-27},
	date = {2025-01-27},
	langid = {english},
	keywords = {quadtree, r-tree},
	file = {PDF:/home/telvivace/Zotero/storage/LWL3YHKV/Quadtree and R-tree indexes in Oracle Spatial A comparison using GIS data.pdf:application/pdf;Snapshot:/home/telvivace/Zotero/storage/DR6UMF4R/221213231_Quadtree_and_R-tree_indexes_in_Oracle_Spatial_A_comparison_using_GIS_data.html:text/html},
}

@book{re_analysis_1985,
	title = {Analysis of quadtree algorithms},
	url = {http://gen.lib.rus.ec/book/index.php?md5=057e9e95279c84dcb173c7bc5c12671f},
	author = {R.E, Webber},
	urldate = {2025-01-27},
	date = {1985},
	keywords = {quadtree},
	file = {Webber R.E. - Analysis of quadtree algorithms (1985):/home/telvivace/Zotero/storage/3FHTHYPD/Webber R.E. - Analysis of quadtree algorithms (1985).djvu:image/vnd.djvu},
}

@article{samet_data_1985,
	title = {Data structures for quadtree approximation and compression},
	volume = {28},
	issn = {0001-0782},
	url = {https://dl.acm.org/doi/10.1145/4284.4290},
	doi = {10.1145/4284.4290},
	abstract = {A number of data structures for representing images by quadtrees without pointers are discussed. The image is treated as a collection of leaf nodes. Each leaf node is represented by use of a locational code corresponding to a sequence of directional codes that locate the leaf along a path from the root of the tree. Somewhat related is the concept of a forest which is a representation that consists of a collection of maximal blocks. It is reviewed and refined to enable the representation of a quadtree as a sequence of approximations. In essence, all {BLACK} and {WHITE} nodes are said to be of type {GB} and {GW}, respectively. {GRAY} nodes are of type {GB} if at least two of their sons are of type {GB}; otherwise, they are of type {GW}. Sequences of approximations using various combinations of locational codes of {GB} and {GW} nodes are proposed and shown to be superior to approximation methods based on truncation of nodes below a certain level in the tree. These approximations have two important properties. First, they are progressive in the sense that as more of the image is transmitted, the receiving device can construct a better approximation (contrast with facsimile methods which transmit the image one line at a time). Second, they are proved to lead to compression in the sense that they never require more than {MIN}(B, W) nodes where B and W correspond to the number of {BLACK} and {WHITE} nodes in the original quadtree. Algorithms are given for constructing the approximation sequences as well as decoding them to rebuild the original quadtree.},
	pages = {973--993},
	number = {9},
	journaltitle = {Commun. {ACM}},
	author = {Samet, Hanan},
	urldate = {2025-01-27},
	date = {1985-09-01},
	note = {Number: 9},
	keywords = {quadtree},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/RBMPAD72/Samet - 1985 - Data structures for quadtree approximation and compression.pdf:application/pdf},
}

@article{lefebvre_octree_2005,
	title = {Octree textures on the {GPU}},
	volume = {2},
	url = {https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=9b577f2545307e14898e06171a6b9c4216f32b5c},
	pages = {595--613},
	journaltitle = {{GPU} gems},
	author = {Lefebvre, Sylvain and Hornus, Samuel and Neyret, Fabrice},
	urldate = {2025-01-27},
	date = {2005},
	note = {Publisher: Citeseer},
	keywords = {octree},
	file = {Available Version (via Google Scholar):/home/telvivace/Zotero/storage/ZBAFLDIZ/Lefebvre et al. - 2005 - Octree textures on the GPU.pdf:application/pdf},
}

@article{schnabel_octree-based_2006,
	title = {Octree-based Point-Cloud Compression.},
	volume = {3},
	url = {https://diglib.eg.org/bitstreams/4e298ef2-bf9b-4ae2-8432-5ca97cfbd9b7/download},
	pages = {111--121},
	journaltitle = {{PBG}@ {SIGGRAPH}},
	author = {Schnabel, Ruwen and Klein, Reinhard},
	urldate = {2025-01-27},
	date = {2006},
	keywords = {octree},
	file = {Available Version (via Google Scholar):/home/telvivace/Zotero/storage/7MPCIHVQ/Schnabel and Klein - 2006 - Octree-based Point-Cloud Compression..pdf:application/pdf},
}

@article{whang_octree-r_1995,
	title = {Octree-R: An Adaptive Octree for Efficient Ray Tracing},
	volume = {1},
	url = {http://www.cs.drexel.edu/~david/Classes/Papers/IEEE_TOVCG95_v1n4.pdf},
	shorttitle = {Octree-R},
	pages = {343},
	number = {4},
	journaltitle = {{IEEE} {TRANSACTIONS} {ON} {VISUALIZATION} {AND} {COMPUTER} {GRAPHICS}},
	author = {Whang, Kyu-Young and Song, Ju-Won and Chang, Ji-Woong and Kim, Ji-Yun and Cho, Wan-Sup and Park, Chong-Mok and Song, Il-Yeol},
	urldate = {2025-01-27},
	date = {1995},
	note = {Number: 4},
	keywords = {octree},
	file = {Available Version (via Google Scholar):/home/telvivace/Zotero/storage/ZFCYNC5P/Whang et al. - 1995 - Octree-R An Adaptive Octree for Efficient Ray Tracing.pdf:application/pdf},
}

@article{jung_octree-based_1997,
	title = {Octree-based hierarchical distance maps for collision detection},
	volume = {14},
	rights = {Copyright © 1997 John Wiley \& Sons, Inc.},
	issn = {1097-4563},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/%28SICI%291097-4563%28199711%2914%3A11%3C789%3A%3AAID-ROB3%3E3.0.CO%3B2-Q},
	doi = {10.1002/(SICI)1097-4563(199711)14:11<789::AID-ROB3>3.0.CO;2-Q},
	abstract = {Discretized distance maps have been used in robotics for path planning and efficient collision detection applications in static environments.1 However, they have been used at the finest level of resolution, thereby making them memory intensive. In this article, we propose an octree-based hierarchical representation for discretized distance maps, called Octree Distance Maps ({ODM}), and show its use in efficient collision detection. To the best of our knowledge, ours is the first work to consider the use of hierarchical distance maps for collision detection. {ODM} representation achieves an advantageous compromise between array-based distance maps and ordinary octrees. Compared to the former, {ODM} requires a fraction of the memory at the expense of somewhat slower collision detection. Compared to the latter, {ODM} requires slightly more memory but provides a significant improvement in collision detection. {ODM} is similar to the quadtree distance transforms used in image representation2 but differs significantly in various aspects of distance representation and its use in collision detection since the main motivation behind {ODM} is efficient collision detection instead of image representation. We then present algorithms for (1) creating an {ODM} from an octree, and (2) for efficient collision detection based on an {ODM}. Extensive experiments are then presented and compared with octree-based collision detection. Our experimental results quantify the advantageous compromise achieved by {ODM} representation. © 1997 John Wiley \& Sons, Inc.},
	pages = {789--806},
	number = {11},
	journaltitle = {Journal of Robotic Systems},
	author = {Jung, Derek and Gupta, Kamal K.},
	urldate = {2025-01-27},
	date = {1997-11},
	langid = {english},
	note = {Number: 11
\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/\%28SICI\%291097-4563\%28199711\%2914\%3A11\%3C789\%3A\%3AAID-{ROB}3\%3E3.0.{CO}\%3B2-Q},
	keywords = {octree},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/KDN3N282/Jung and Gupta - 1997 - Octree-based hierarchical distance maps for collision detection.pdf:application/pdf;Snapshot:/home/telvivace/Zotero/storage/XX33MURR/(SICI)1097-4563(199711)1411789AID-ROB33.0.html:text/html},
}

@article{revelles_efficient_2025,
	title = {An Efficient Parametric Algorithm for Octree Traversal},
	url = {https://scholar.archive.org/work/cxmfvizosvhyvdtcfqginv4r44/access/wayback/http://wscg.zcu.cz/wscg2000/Papers_2000/X31.pdf},
	author = {Revelles, J. and Urena, C. and Lastra, M.},
	urldate = {2025-01-27},
	date = {2025-01-27},
	keywords = {octree},
	file = {Available Version (via Google Scholar):/home/telvivace/Zotero/storage/84YB9R4X/Revelles et al. - An Efficient Parametric Algorithm for Octree Traversal.pdf:application/pdf},
}

@article{wang_review_2021,
	title = {A review of collision detection for deformable objects},
	volume = {32},
	rights = {© 2021 John Wiley \& Sons, Ltd.},
	issn = {1546-427X},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cav.1987},
	doi = {10.1002/cav.1987},
	abstract = {In the process of simulating and modeling real objects, the phenomenon of objects penetrating each other may occur in the model, which is unrealistic and then the research of collision detection ({CD}) is generated. As a bottleneck of virtual environment simulation, researchers have conducted in-depth research on {CD}, especially the {CD} of deformable objects. In this paper, we briefly review the related research on {CD} of deformable objects regarding relevant literature. First, we briefly introduce previous reviews of {CD}. Second, we review the popular research methods and limitations of {CD} between deformable objects. Third, we review the popular research methods and limitations of self-collision detection in deformable objects. Finally, we discuss future directions of development. This review can be used as a reference for the application of {CD} in all directions.},
	pages = {e1987},
	number = {5},
	journaltitle = {Computer Animation and Virtual Worlds},
	author = {Wang, Monan and Cao, Jiaqi},
	urldate = {2025-01-27},
	date = {2021},
	langid = {english},
	note = {Number: 5
\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/cav.1987},
	keywords = {collision detection, deformable objects, inter-object collision detection, intra-object collision detection},
	file = {Full Text PDF:/home/telvivace/Zotero/storage/WV8WD7JW/Wang and Cao - 2021 - A review of collision detection for deformable objects.pdf:application/pdf;Snapshot:/home/telvivace/Zotero/storage/4WHKEEIL/cav.html:text/html},
}

@inproceedings{sample_optimizing_2001,
	title = {Optimizing search strategies in kd trees},
	url = {http://dbpubs.stanford.edu/pub/showDoc.Fulltext?lang=en&doc=2001-17&format=ps&compression=&name=2001-17.ps},
	booktitle = {Fifth {WSES}/{IEEE} World Multiconference on Circuits, Systems, Communications \& Computers ({CSCC} 2001)},
	author = {Sample, Neal and Haines, Matthew and Arnold, Mark and Purcell, Timothy},
	urldate = {2025-01-27},
	date = {2001},
	file = {Available Version (via Google Scholar):/home/telvivace/Zotero/storage/5LNZA7WX/Sample et al. - 2001 - Optimizing search strategies in kd trees.pdf:application/pdf},
}

@inproceedings{ramasubramanian_generalized_1989,
	title = {A generalized optimization of the kd tree for fast nearest-neighbour search},
	url = {https://ieeexplore.ieee.org/abstract/document/177003/},
	pages = {565--568},
	booktitle = {Fourth {IEEE} Region 10 International Conference {TENCON}},
	publisher = {{IEEE}},
	author = {Ramasubramanian, V. and Paliwal, K. K.},
	urldate = {2025-01-27},
	date = {1989},
}

@inproceedings{sample_optimizing_2001-1,
	title = {Optimizing search strategies in kd trees},
	url = {http://dbpubs.stanford.edu/pub/showDoc.Fulltext?lang=en&doc=2001-17&format=ps&compression=&name=2001-17.ps},
	booktitle = {Fifth {WSES}/{IEEE} World Multiconference on Circuits, Systems, Communications \& Computers ({CSCC} 2001)},
	author = {Sample, Neal and Haines, Matthew and Arnold, Mark and Purcell, Timothy},
	urldate = {2025-01-27},
	date = {2001},
	file = {Available Version (via Google Scholar):/home/telvivace/Zotero/storage/GGBK335C/Sample et al. - 2001 - Optimizing search strategies in kd trees.pdf:application/pdf},
}
